name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  cleanup:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: dev
          fail-if-no-assets: false
          assets: |
            pfsensecli-*

  releases-matrix:
    permissions:
      contents: write  # for wangyoucao577/go-release-action to upload release assets
    needs: cleanup
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
            - goarch: "386"
              goos: darwin
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3 # v2

      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date -u +%Y%m%d-%H%M) >> ${GITHUB_ENV}

      - name: Go Release Binaries
        uses: wangyoucao577/go-release-action@2ac3035fa4c4feed6a8272ce278b0577b93cf8e5 # v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          release_tag: dev
          overwrite: true
          project_path: cmd/pfsensecli
          binary_name: pfsensecli
          asset_name: "pfsensecli-${{ env.BUILD_TIME }}-${{ matrix.goos }}-${{ matrix.goarch }}"
